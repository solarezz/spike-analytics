import os
import re
from pathlib import Path
from api.clients.trackerggapi import TrackerGGAPI
from aiogram.types import Message, FSInputFile
from aiogram import Router
from aiogram.filters import Command
from decouple import config
from bot.utils.validation import validate_riot_id, get_error_message, APIError
from bot.create_bot import all_media_dir
import utils.card_generator as CardGen

tracker = TrackerGGAPI()

profile_router = Router()

async def get_enhanced_stats(riot_id: str, tagline: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (legacy —Ñ—É–Ω–∫—Ü–∏—è)"""
    tracker = TrackerGGAPI()
    profile_data = await tracker.get_player_profile(riot_id, tagline)
    
    if not profile_data:
        return None
        
    summary = tracker.get_player_summary(profile_data)
    return summary

def sanitize_filename(name: str) -> str:
    """–ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª—è–µ—Ç –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã"""
    name = name.replace(' ', '_')
    name = re.sub(r'[<>:"/\\|?*\0]', '', name)
    return name

@profile_router.message(Command("profile"))
async def profile_stat(message: Message):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    try:
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /profile name#tag\n\n–ü—Ä–∏–º–µ—Ä: /profile Riot#123")
            return
    
        validation_result = validate_riot_id(args[1])
        if not validation_result:
            await message.answer(
                "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Riot ID!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /profile name#tag\n"
                "‚Ä¢ –ò–º—è: 3-16 —Å–∏–º–≤–æ–ª–æ–≤\n"
                "‚Ä¢ –¢–µ–≥: 3-5 —Å–∏–º–≤–æ–ª–æ–≤\n\n"
                "–ü—Ä–∏–º–µ—Ä: /profile PlayerName#1234"
            )
            return

        riot_id, tagline = validation_result
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        loading_msg = await message.answer(f"üîç –°–æ–∑–¥–∞—é –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è {riot_id}#{tagline}...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        card_path = await CardGen.generate_enhanced_profile_card(riot_id, tagline)
            
        if not card_path or not os.path.exists(card_path):
            await loading_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è caption
        tracker_api = TrackerGGAPI()
        profile_data = await tracker_api.get_player_profile(riot_id, tagline)
        
        if profile_data:
            summary = tracker_api.get_player_summary(profile_data)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º caption —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            caption_text = f"üéÆ **{riot_id}#{tagline}**\n\n"
            
            if summary:
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ current_season
                current_season = summary.get('current_season', {})
                
                # –†–∞–Ω–≥
                rank = current_season.get('rank') or "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
                caption_text += f"üèÜ **–†–∞–Ω–≥:** {rank}\n"
                
                # –†–µ–≥–∏–æ–Ω –∏ —É—Ä–æ–≤–µ–Ω—å
                if summary.get('region'):
                    caption_text += f"üåç **–†–µ–≥–∏–æ–Ω:** {summary.get('region')}\n"
                if summary.get('account_level'):
                    caption_text += f"‚≠ê **–£—Ä–æ–≤–µ–Ω—å:** {summary.get('account_level')}\n"
                
                # –ú–∞—Ç—á–∏ –∏ –≤–∏–Ω—Ä–µ–π—Ç
                matches = current_season.get('matches_played', 0) or 0
                win_rate = current_season.get('win_rate', 0) or 0
                caption_text += f"üéØ **–ú–∞—Ç—á–µ–π:** {matches}\n"
                caption_text += f"üìä **–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥:** {win_rate:.1f}%\n"
                
                # K/D
                kd = current_season.get('kd_ratio', 0) or 0
                caption_text += f"‚öîÔ∏è **K/D:** {kd:.2f}\n"
                
                # –õ—é–±–∏–º—ã–π –∞–≥–µ–Ω—Ç –∏–∑ —Ç–æ–ø –∞–≥–µ–Ω—Ç–æ–≤
                top_agents = summary.get('top_agents', [])
                if top_agents:
                    main_agent = top_agents[0]
                    agent_name = main_agent.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')
                    agent_matches = main_agent.get('matches_played', 0) or 0
                    caption_text += f"üé≠ **–õ—é–±–∏–º—ã–π –∞–≥–µ–Ω—Ç:** {agent_name} ({agent_matches} –º–∞—Ç—á–µ–π)\n"
                    
                # –°—Ç–∏–ª—å –∏–≥—Ä—ã
                play_style = summary.get('play_style', '')
                if play_style:
                    caption_text += f"üé® **–°—Ç–∏–ª—å:** {play_style}\n"
            else:
                caption_text += "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å Tracker.gg"
        else:
            caption_text = f"üéÆ **{riot_id}#{tagline}**\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å Tracker.gg"
                
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å caption
        try:
            photo_file = FSInputFile(card_path)
            await message.reply_photo(
                photo=photo_file, 
                caption=caption_text,
                parse_mode="Markdown"
            )
            await loading_msg.delete()
                
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            await safe_delete_file(card_path)
                
        except Exception as e:
            await loading_msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ä—Ç–æ—á–∫–∏: {str(e)}")
        
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")



async def safe_delete_file(file_path: str):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists(file_path):
            os.remove(file_path)
            print(f"‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path}: {e}")
