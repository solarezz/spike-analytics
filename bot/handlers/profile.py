import os
import re
from pathlib import Path
from api.clients.henrik_client import HenrikAPIClient
from aiogram.types import Message, FSInputFile
from aiogram import Router, F
from aiogram.filters import Command
from decouple import config
from bot.utils.validation import validate_riot_id, get_error_message, APIError
from bot.create_bot import all_media_dir
import utils.card_generator as CardGen

client = HenrikAPIClient(api_key=config("HENRIK_API"))

profile_router = Router()

def sanitize_filename(name: str) -> str:
    """–ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª—è–µ—Ç –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã, –∑–∞–º–µ–Ω—è—è –∏—Ö –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
    name = name.replace(' ', '_')
    # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Ñ–∞–π–ª–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
    name = re.sub(r'[<>:"/\\|?*\0]', '', name)
    return name

@profile_router.message(Command("profile"))
async def profile_stat(message: Message):
    try:
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /profile name#tag\n\n–ü—Ä–∏–º–µ—Ä: /profile Riot#123")
            return
    
        validation_result = validate_riot_id(args[1])
        if not validate_riot_id:
            await message.answer(
                "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Riot ID!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /profile name#tag\n"
                "‚Ä¢ –ò–º—è: 3-16 —Å–∏–º–≤–æ–ª–æ–≤\n"
                "‚Ä¢ –¢–µ–≥: 3-5 —Å–∏–º–≤–æ–ª–æ–≤\n\n"
                "–ü—Ä–∏–º–µ—Ä: /profile PlayerName#1234"
            )
            return
        
        name, tag = validation_result
        
        loading_msg = await message.answer("üîç –ò—â—É –∏–≥—Ä–æ–∫–∞...")
        
        player, error = await client.get_full_player_info(name, tag)
        

        print(player)
        
        if error:
            await message.answer(get_error_message(error))
            return
        
        if player:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É (—Ñ–∞–π–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
            img_bytes = CardGen.generate_profile_card(player)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
            safe_name = sanitize_filename(name)
            filename = f"{safe_name}-{tag}.png"
            
            # –ü–†–ê–í–ò–õ–¨–ù–´–ô –ø—É—Ç—å: –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (spike-analytics/)
            # –¢–µ–∫—É—â–∏–π —Ñ–∞–π–ª: spike-analytics/bot/handlers/profile.py
            # –ù—É–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å—Å—è –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
            current_file = Path(__file__)
            print(f"–¢–µ–∫—É—â–∏–π —Ñ–∞–π–ª: {current_file}")
            print(f"Parent: {current_file.parent}")
            print(f"Parent.parent: {current_file.parent.parent}")
            print(f"Parent.parent.parent: {current_file.parent.parent.parent}")
            
            project_root = current_file.parent.parent.parent  # spike-analytics/
            generated_file_path = project_root / filename
            
            try:
                print(f"–û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: {generated_file_path}")
                print(f"–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {generated_file_path.exists()}")
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
                print(f"–§–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ:")
                for file in project_root.glob("*.png"):
                    print(f"  - {file}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏
                if generated_file_path.exists():
                    photo_file = FSInputFile(path=generated_file_path)
                    await message.answer_photo(photo=photo_file)
                    await loading_msg.delete()
                    await message.answer(player.format_for_telegram())
                else:
                    await message.answer("‚ö†Ô∏è –§–∞–π–ª –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω.")
                
            except Exception as e:
                print(f"Error in profile generation: {e}")
                await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è.")
            finally:
                # –ü—Ä–æ—Å—Ç–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ os.remove
                try:
                    if generated_file_path.exists():
                        os.remove(generated_file_path)
                        print(f"–§–∞–π–ª {generated_file_path} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                    else:
                        print(f"–§–∞–π–ª {generated_file_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                except Exception as delete_error:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {generated_file_path}: {delete_error}")
        else:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞.")
            
    except Exception as e:
        print(f"Unexpected error in profile handler: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")