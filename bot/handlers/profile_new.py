import os
import re
from pathlib import Path
from api.clients.trackerggapi import TrackerGGAPI
from aiogram.types import Message, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram import Router, F
from aiogram.filters import Command
from decouple import config
from bot.utils.validation import validate_riot_id, get_error_message, APIError
from bot.create_bot import all_media_dir
import utils.card_generator as CardGen

tracker = TrackerGGAPI()

profile_router = Router()

async def get_enhanced_stats(riot_id: str, tagline: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (legacy —Ñ—É–Ω–∫—Ü–∏—è)"""
    tracker = TrackerGGAPI()
    profile_data = await tracker.get_player_profile(riot_id, tagline)
    
    if not profile_data:
        return None
        
    summary = tracker.get_player_summary(profile_data)
    return summary

def sanitize_filename(name: str) -> str:
    """–ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª—è–µ—Ç –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã"""
    name = name.replace(' ', '_')
    name = re.sub(r'[<>:"/\\|?*\0]', '', name)
    return name

@profile_router.message(Command("profile"))
async def profile_stat(message: Message):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    try:
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /profile name#tag\n\n–ü—Ä–∏–º–µ—Ä: /profile Riot#123")
            return
    
        validation_result = validate_riot_id(args[1])
        if not validation_result:
            await message.answer(
                "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Riot ID!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /profile name#tag\n"
                "‚Ä¢ –ò–º—è: 3-16 —Å–∏–º–≤–æ–ª–æ–≤\n"
                "‚Ä¢ –¢–µ–≥: 3-5 —Å–∏–º–≤–æ–ª–æ–≤\n\n"
                "–ü—Ä–∏–º–µ—Ä: /profile PlayerName#1234"
            )
            return

        riot_id, tagline = validation_result
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üöÄ Enhanced (Tracker.gg)", callback_data=f"enhanced:{riot_id}:{tagline}"),
                InlineKeyboardButton(text="üìä Basic (Riot API)", callback_data=f"basic:{riot_id}:{tagline}")
            ]
        ])
        
        await message.answer(
            f"üéØ **–ü—Ä–æ—Ñ–∏–ª—å: {riot_id}#{tagline}**\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–∞—Ä—Ç–æ—á–∫–∏:\n"
            "‚Ä¢ **Enhanced** - –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å Tracker.gg\n"
            "‚Ä¢ **Basic** - –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å Riot API",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@profile_router.callback_query(F.data.startswith('enhanced:') | F.data.startswith('basic:'))
async def handle_profile_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–∞—Ä—Ç–æ—á–∫–∏"""
    try:
        await callback.answer()
        
        data_parts = callback.data.split(':', 2)
        if len(data_parts) != 3:
            await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞")
            return
        
        card_type, riot_id, tagline = data_parts
        
        loading_msg = await callback.message.edit_text(
            f"üîç –°–æ–∑–¥–∞—é {card_type} –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è {riot_id}#{tagline}..."
        )
        
        if card_type == 'enhanced':
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º enhanced –∫–∞—Ä—Ç–æ—á–∫—É
            card_path = await CardGen.generate_enhanced_profile_card(riot_id, tagline)
            
            if not card_path or not os.path.exists(card_path):
                await loading_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å enhanced –∫–∞—Ä—Ç–æ—á–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")
                return
                
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º enhanced –∫–∞—Ä—Ç–æ—á–∫—É
            try:
                photo_file = FSInputFile(card_path)
                await callback.message.reply_photo(
                    photo=photo_file, 
                    caption=f"üöÄ **Enhanced –∫–∞—Ä—Ç–æ—á–∫–∞**\n{riot_id}#{tagline}\n\nüìä –î–∞–Ω–Ω—ã–µ —Å Tracker.gg",
                    parse_mode="Markdown"
                )
                await loading_msg.delete()
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                await safe_delete_file(card_path)
                
            except Exception as e:
                await loading_msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ä—Ç–æ—á–∫–∏: {str(e)}")
                
        else:  # basic
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–¥ –¥–ª—è basic –∫–∞—Ä—Ç–æ—á–∫–∏
            await loading_msg.edit_text("‚ùå Basic –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Enhanced.")
                
    except Exception as e:
        await callback.message.edit_text(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

async def safe_delete_file(file_path: str):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists(file_path):
            os.remove(file_path)
            print(f"‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path}: {e}")
